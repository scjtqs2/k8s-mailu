---
apiVersion: v1
data:
  release: >-
    
kind: Secret
metadata:
  labels:
    modifiedAt: '1661851832'
    name: mailu
    owner: helm
    status: deployed
    version: '1'
  name: sh.helm.release.v1.mailu.v1
  namespace: mailu-mailserver
type: helm.sh/release.v1

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-admin
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: admin
  template:
    metadata:
      labels:
        app: mailu
        component: admin
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
        - name: unbond-overwride
          configMap:
            name: unbound-conf
            items:
              - key: unbound.conf
                path: unbound.conf
      containers:
        - name: admin
          image: 'scjtqs/mailu-admin:1.9.35'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: config-common
            - name: QUOTA_STORAGE_URL
              value: 'redis://mailu-redis/1'
            - name: RATELIMIT_STORAGE_URL
              value: 'redis://mailu-redis/2'
            - name: POSTMASTER
              valueFrom:
                configMapKeyRef:
                  key: POSTMASTER
                  name: config-common
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: DOMAIN
                  name: config-common
            - name: HOSTNAMES
              valueFrom:
                configMapKeyRef:
                  key: HOSTNAMES
                  name: config-common
            - name: IMAP_ADDRESS
              value: mailu-dovecot.mailu-mailserver
            - name: POP3_ADDRESS
              value: mailu-dovecot.mailu-mailserver
            - name: SMTP_ADDRESS
              value: mailu-postfix.mailu-mailserver
            - name: AUTHSMTP_ADDRESS
              value: mailu-postfix.mailu-mailserver
            - name: REDIS_ADDRESS
              value: mailu-redis.mailu-mailserver
            - name: WEBMAIL
              valueFrom:
                configMapKeyRef:
                  key: WEBMAIL
                  name: config-common
            - name: WEBSITE
              valueFrom:
                configMapKeyRef:
                  key: WEBSITE
                  name: config-common
            - name: WEB_WEBMAIL
              valueFrom:
                configMapKeyRef:
                  key: WEB_WEBMAIL
                  name: config-common
            - name: WEBMAIL_ADDRESS
              value: mailu-roundcube.mailu-mailserver.svc.cluster.local
            - name: WEBDAV
              valueFrom:
                configMapKeyRef:
                  key: WEBDAV
                  name: config-common
            - name: WEBDAV_ADDRESS
              value: 'mailu-webdav.mailu-mailserver:5232'
            - name: SITENAME
              valueFrom:
                configMapKeyRef:
                  key: SITENAME
                  name: config-common
            - name: FRONT_ADDRESS
              value: mailu-front.mailu-mailserver
            - name: PASSWORD_SCHEME
              valueFrom:
                configMapKeyRef:
                  key: PASSWORD_SCHEME
                  name: config-common
            - name: RECIPIENT_DELIMITER
              valueFrom:
                configMapKeyRef:
                  key: RECIPIENT_DELIMITER
                  name: config-common
            - name: SUBNET
              valueFrom:
                configMapKeyRef:
                  key: SUBNET
                  name: config-common
            - name: SUBNET6
              valueFrom:
                configMapKeyRef:
                  key: SUBNET6
                  name: config-common
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: SECRET_KEY
                  name: config-common
            - name: MESSAGE_RATELIMIT
              valueFrom:
                configMapKeyRef:
                  key: MESSAGE_RATELIMIT
                  name: config-common
            - name: AUTH_RATELIMIT_IP
              valueFrom:
                configMapKeyRef:
                  key: AUTH_RATELIMIT_IP
                  name: config-common
            - name: AUTH_RATELIMIT_USER
              valueFrom:
                configMapKeyRef:
                  key: AUTH_RATELIMIT_USER
                  name: config-common
            - name: AUTH_RATELIMIT_EXEMPTION_LENGTH
              value: '86400'
            - name: INITIAL_ADMIN_ACCOUNT
              valueFrom:
                configMapKeyRef:
                  key: INITIAL_ADMIN_ACCOUNT
                  name: config-common
            - name: INITIAL_ADMIN_DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: INITIAL_ADMIN_DOMAIN
                  name: config-common
            - name: INITIAL_ADMIN_PW
              valueFrom:
                configMapKeyRef:
                  key: INITIAL_ADMIN_PW
                  name: config-common
            - name: DB_FLAVOR
              valueFrom:
                configMapKeyRef:
                  key: DB_FLAVOR
                  name: config-common
            - name: DB_USER
              valueFrom:
                configMapKeyRef:
                  key: DB_USER
                  name: config-common
            - name: DB_PW
              valueFrom:
                configMapKeyRef:
                  key: DB_PW
                  name: config-common
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: DB_NAME
                  name: config-common
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: DB_HOST
                  name: config-common
            - name: DMARC_RUA
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUA
                  name: config-common
            - name: DMARC_RUF
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUF
                  name: config-common
            - name: WELCOME
              valueFrom:
                configMapKeyRef:
                  key: WELCOME
                  name: config-common
            - name: WELCOME_SUBJECT
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_SUBJECT
                  name: config-common
            - name: WELCOME_BODY
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_BODY
                  name: config-common
            - name: COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION
                  name: config-common
            - name: COMPRESSION_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION_LEVEL
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: '1'
              memory: 1000Mi
            requests:
              cpu: 50m
              memory: 200Mi
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: admin
            - name: data
              mountPath: /dkim
              subPath: dkim
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            httpGet:
              path: /sso/login
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /sso/login
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            httpGet:
              path: /sso/login
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 172.16.119.119
        searches:
          - mailu-mailserver.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-clamav
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: clamav
  template:
    metadata:
      labels:
        app: mailu
        component: clamav
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: clamav
          image: 'scjtqs/mailu-clamav:1.9.35'
          ports:
            - name: clamav
              containerPort: 3310
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: config-common
            - name: DMARC_RUA
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUA
                  name: config-common
            - name: DMARC_RUF
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUF
                  name: config-common
            - name: WELCOME
              valueFrom:
                configMapKeyRef:
                  key: WELCOME
                  name: config-common
            - name: WELCOME_SUBJECT
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_SUBJECT
                  name: config-common
            - name: WELCOME_BODY
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_BODY
                  name: config-common
            - name: COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION
                  name: config-common
            - name: COMPRESSION_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION_LEVEL
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 500m
              memory: 2000Mi
            requests:
              cpu: 100m
              memory: 500Mi
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: clamav
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            exec:
              command:
                - /health.sh
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /health.sh
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            exec:
              command:
                - /health.sh
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 60
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: mailu-dovecot-override
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
data:
  dovecot.conf: >
    # More info here:
    https://mailu.io/1.8/kubernetes/mailu/mailu-index.html#dovecot
    
      mail_nfs_index = yes

    mail_nfs_storage = yes

    mail_fsync = always

    mmap_disable = yes

    mail_max_userip_connections = 100

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-dovecot
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: dovecot
  template:
    metadata:
      labels:
        app: mailu
        component: dovecot
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: overrides
          configMap:
            name: mailu-dovecot-override
            defaultMode: 420
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: admin
          image: 'scjtqs/mailu-dovecot:1.9.35'
          ports:
            - name: auth
              containerPort: 2102
              protocol: TCP
            - name: lmtp
              containerPort: 2525
              protocol: TCP
            - name: imap
              containerPort: 143
              protocol: TCP
            - name: pop3
              containerPort: 110
              protocol: TCP
            - name: sieve
              containerPort: 4190
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: config-common
            - name: FRONT_ADDRESS
              value: mailu-front.mailu-mailserver
            - name: ADMIN_ADDRESS
              value: mailu-admin.mailu-mailserver
            - name: ANTISPAM_WEBUI_ADDRESS
              value: 'mailu-rspamd:11334'
            - name: POSTMASTER
              valueFrom:
                configMapKeyRef:
                  key: POSTMASTER
                  name: config-common
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: DOMAIN
                  name: config-common
            - name: HOSTNAMES
              valueFrom:
                configMapKeyRef:
                  key: HOSTNAMES
                  name: config-common
            - name: RECIPIENT_DELIMITER
              valueFrom:
                configMapKeyRef:
                  key: RECIPIENT_DELIMITER
                  name: config-common
            - name: REDIS_ADDRESS
              value: mailu-redis.mailu-mailserver
            - name: WEBMAIL
              valueFrom:
                configMapKeyRef:
                  key: WEBMAIL
                  name: config-common
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: SECRET_KEY
                  name: config-common
            - name: DMARC_RUA
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUA
                  name: config-common
            - name: DMARC_RUF
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUF
                  name: config-common
            - name: WELCOME
              valueFrom:
                configMapKeyRef:
                  key: WELCOME
                  name: config-common
            - name: WELCOME_SUBJECT
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_SUBJECT
                  name: config-common
            - name: WELCOME_BODY
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_BODY
                  name: config-common
            - name: COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION
                  name: config-common
            - name: COMPRESSION_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION_LEVEL
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 200Mi
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: dovecotdata
            - name: data
              mountPath: /mail
              subPath: dovecotmail
            - name: overrides
              mountPath: /overrides
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - echo QUIT|nc localhost 110|grep "Dovecot ready."
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - echo QUIT|nc localhost 110|grep "Dovecot ready."
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            exec:
              command:
                - sh
                - '-c'
                - echo QUIT|nc localhost 110|grep "Dovecot ready."
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-fetchmail
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: fetchmail
  template:
    metadata:
      labels:
        app: mailu
        component: fetchmail
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: admin
          image: 'scjtqs/mailu-fetchmail:1.9.35'
          ports:
            - containerPort: 5232
              protocol: TCP
            - containerPort: 80
              protocol: TCP
          env:
            - name: DEBUG
              value: 'True'
            - name: HOST_SMTP
              value: mailu-front
            - name: HOST_ADMIN
              value: mailu-admin
            - name: FETCHMAIL_DELAY
              valueFrom:
                configMapKeyRef:
                  key: FETCHMAIL_DELAY
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 100Mi
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: dovecotdata
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 172.16.119.119
        searches:
          - mailu-mailserver.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-postfix
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: postfix
  template:
    metadata:
      labels:
        app: mailu
        component: postfix
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: postfix
          image: 'scjtqs/mailu-postfix:1.9.35'
          ports:
            - name: smtp
              containerPort: 25
              protocol: TCP
            - name: smtp-ssl
              containerPort: 465
              protocol: TCP
            - name: smtp-starttls
              containerPort: 587
              protocol: TCP
            - name: smtp-auth
              containerPort: 10025
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: config-common
            - name: REJECT_UNLISTED_RECIPIENT
              valueFrom:
                configMapKeyRef:
                  key: REJECT_UNLISTED_RECIPIENT
                  name: config-common
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: DOMAIN
                  name: config-common
            - name: HOSTNAMES
              valueFrom:
                configMapKeyRef:
                  key: HOSTNAMES
                  name: config-common
            - name: MESSAGE_SIZE_LIMIT
              valueFrom:
                configMapKeyRef:
                  key: MESSAGE_SIZE_LIMIT
                  name: config-common
            - name: SUBNET
              valueFrom:
                configMapKeyRef:
                  key: SUBNET
                  name: config-common
            - name: SUBNET6
              valueFrom:
                configMapKeyRef:
                  key: SUBNET6
                  name: config-common
            - name: RECIPIENT_DELIMITER
              valueFrom:
                configMapKeyRef:
                  key: RECIPIENT_DELIMITER
                  name: config-common
            - name: LMTP_ADDRESS
              value: 'mailu-dovecot:2525'
            - name: ANTISPAM_MILTER_ADDRESS
              value: 'mailu-rspamd:11332'
            - name: ADMIN_ADDRESS
              value: mailu-admin
            - name: FRONT_ADDRESS
              value: mailu-front
            - name: DMARC_RUA
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUA
                  name: config-common
            - name: DMARC_RUF
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUF
                  name: config-common
            - name: WELCOME
              valueFrom:
                configMapKeyRef:
                  key: WELCOME
                  name: config-common
            - name: WELCOME_SUBJECT
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_SUBJECT
                  name: config-common
            - name: WELCOME_BODY
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_BODY
                  name: config-common
            - name: COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION
                  name: config-common
            - name: COMPRESSION_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION_LEVEL
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 500m
              memory: 2000Mi
            requests:
              cpu: 200m
              memory: 1000Mi
          volumeMounts:
            - name: data
              mountPath: /queue
              subPath: mailqueue
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            exec:
              command:
                - sh
                - '-c'
                - echo QUIT|nc localhost 25|grep "220 .* ESMTP Postfix"
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - sh
                - '-c'
                - echo QUIT|nc localhost 25|grep "220 .* ESMTP Postfix"
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            exec:
              command:
                - sh
                - '-c'
                - echo QUIT|nc localhost 25|grep "220 .* ESMTP Postfix"
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: None
      dnsConfig:
        nameservers:
          - 172.16.119.119
        searches:
          - mailu-mailserver.svc.cluster.local
          - svc.cluster.local
          - cluster.local
        options:
          - name: ndots
            value: "5"
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: Recreate
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-redis
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: redis
  template:
    metadata:
      labels:
        app: mailu
        component: redis
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: redis
          image: 'redis:5-alpine'
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: redis
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            exec:
              command:
                - /usr/local/bin/redis-cli
                - info
                - status
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /usr/local/bin/redis-cli
                - info
                - status
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            exec:
              command:
                - /usr/local/bin/redis-cli
                - info
                - status
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-roundcube
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: roundcube
  template:
    metadata:
      labels:
        app: mailu
        component: roundcube
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: roundcube
          image: 'scjtqs/mailu-roundcube:1.9.35'
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: MESSAGE_SIZE_LIMIT
              valueFrom:
                configMapKeyRef:
                  key: MESSAGE_SIZE_LIMIT
                  name: config-common
            - name: IMAP_ADDRESS
              value: mailu-dovecot
            - name: FRONT_ADDRESS
              value: mailu-front
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  key: SECRET_KEY
                  name: config-common
            - name: SUBNET
              valueFrom:
                configMapKeyRef:
                  key: SUBNET
                  name: config-common
            - name: SUBNET6
              valueFrom:
                configMapKeyRef:
                  key: SUBNET6
                  name: config-common
            - name: ADMIN
              valueFrom:
                configMapKeyRef:
                  key: ADMIN
                  name: config-common
            - name: WEB_ADMIN
              valueFrom:
                configMapKeyRef:
                  key: WEB_ADMIN
                  name: config-common
            - name: ROUNDCUBE_DB_FLAVOR
              valueFrom:
                configMapKeyRef:
                  key: ROUNDCUBE_DB_FLAVOR
                  name: config-common
            - name: ROUNDCUBE_DB_USER
              valueFrom:
                configMapKeyRef:
                  key: ROUNDCUBE_DB_USER
                  name: config-common
            - name: ROUNDCUBE_DB_PW
              valueFrom:
                configMapKeyRef:
                  key: ROUNDCUBE_DB_PW
                  name: config-common
            - name: ROUNDCUBE_DB_NAME
              valueFrom:
                configMapKeyRef:
                  key: ROUNDCUBE_DB_NAME
                  name: config-common
            - name: ROUNDCUBE_DB_HOST
              valueFrom:
                configMapKeyRef:
                  key: ROUNDCUBE_DB_HOST
                  name: config-common
            - name: DMARC_RUA
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUA
                  name: config-common
            - name: DMARC_RUF
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUF
                  name: config-common
            - name: WELCOME
              valueFrom:
                configMapKeyRef:
                  key: WELCOME
                  name: config-common
            - name: WELCOME_SUBJECT
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_SUBJECT
                  name: config-common
            - name: WELCOME_BODY
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_BODY
                  name: config-common
            - name: COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION
                  name: config-common
            - name: COMPRESSION_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION_LEVEL
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 200m
              memory: 800Mi
            requests:
              cpu: 100m
              memory: 400Mi
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: roundcube
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            exec:
              command:
                - curl
                - '-f'
                - '-L'
                - '-H'
                - 'User-Agent: health'
                - 'http://localhost/'
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - curl
                - '-f'
                - '-L'
                - '-H'
                - 'User-Agent: health'
                - 'http://localhost/'
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            exec:
              command:
                - curl
                - '-f'
                - '-L'
                - '-H'
                - 'User-Agent: health'
                - 'http://localhost/'
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-rspamd
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: rspamd
  template:
    metadata:
      labels:
        app: mailu
        component: rspamd
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: rspamd
          image: 'scjtqs/mailu-rspamd:1.9.35'
          ports:
            - name: rspamd
              containerPort: 11332
              protocol: TCP
            - name: rspamd-http
              containerPort: 11334
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: config-common
            - name: FRONT_ADDRESS
              value: mailu-front.mailu-mailserver.svc.cluster.local
            - name: ADMIN_ADDRESS
              value: mailu-admin.mailu-mailserver.svc.cluster.local
            - name: REDIS_ADDRESS
              value: mailu-redis.mailu-mailserver.svc.cluster.local
            - name: ANTIVIRUS
              valueFrom:
                configMapKeyRef:
                  key: ANTIVIRUS
                  name: config-common
            - name: ANTIVIRUS_ADDRESS
              value: 'mailu-clamav:3310'
            - name: SUBNET
              valueFrom:
                configMapKeyRef:
                  key: SUBNET
                  name: config-common
            - name: SUBNET6
              valueFrom:
                configMapKeyRef:
                  key: SUBNET6
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 500m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
            - name: data
              mountPath: /var/lib/rspamd
              subPath: rspamd
            - name: data
              mountPath: /etc/rspamd/local.d/maps.d
              subPath: rspamd-local.d-maps.d
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            httpGet:
              path: /
              port: rspamd-http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: rspamd-http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            httpGet:
              path: /
              port: rspamd-http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 90
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      hostname: rspamd
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-webdav
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mailu
      component: webdav
  template:
    metadata:
      labels:
        app: mailu
        component: webdav
    spec:
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: mailu-storage
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: webdav
          image: 'scjtqs/mailu-radicale:1.9.35'
          env:
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          ports:
            - name: http
              containerPort: 5232
              protocol: TCP
          resources: { }
          volumeMounts:
            - name: data
              mountPath: /data
              subPath: webdav
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mailu-front
  namespace: mailu-mailserver
  labels:
    app.kubernetes.io/managed-by: Helm
  annotations:
    deprecated.daemonset.template.generation: '1'
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  selector:
    matchLabels:
      app: mailu
      component: front
  template:
    metadata:
      labels:
        app: mailu
        component: front
    spec:
      volumes:
        - name: certs
          secret:
            secretName: mailu-certificates
            items:
              - key: tls.crt
                path: cert.pem
              - key: tls.key
                path: key.pem
            defaultMode: 420
        - name: zoneinfo
          hostPath:
            path: /usr/share/zoneinfo
            type: Directory
      containers:
        - name: front
          image: 'scjtqs/mailu-nginx:1.9.35'
          ports:
            - name: pop3
              containerPort: 110
              protocol: TCP
            - name: pop3s
              containerPort: 995
              protocol: TCP
              hostPort: 995
            - name: imap
              containerPort: 143
              protocol: TCP
            - name: imaps
              containerPort: 993
              protocol: TCP
              hostPort: 993
            - name: smtp
              containerPort: 25
              protocol: TCP
              hostPort: 25
            - name: smtps
              containerPort: 465
              protocol: TCP
              hostPort: 465
            - name: smtp-auth
              containerPort: 10025
              protocol: TCP
            - name: imap-auth
              containerPort: 10143
              protocol: TCP
            - name: smtpd
              containerPort: 587
              protocol: TCP
              hostPort: 587
            - name: auth
              containerPort: 8000
              protocol: TCP
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: LOG_LEVEL
                  name: config-common
            - name: KUBERNETES_INGRESS
              value: 'true'
            - name: TLS_FLAVOR
              value: cert
            - name: HOSTNAMES
              valueFrom:
                configMapKeyRef:
                  key: HOSTNAMES
                  name: config-common
            - name: ADMIN_ADDRESS
              value: mailu-admin.mailu-mailserver.svc.cluster.local
            - name: ANTISPAM_WEBUI_ADDRESS
              value: 'mailu-rspamd.mailu-mailserver.svc.cluster.local:11334'
            - name: POSTMASTER
              valueFrom:
                configMapKeyRef:
                  key: POSTMASTER
                  name: config-common
            - name: DOMAIN
              valueFrom:
                configMapKeyRef:
                  key: DOMAIN
                  name: config-common
            - name: REAL_IP_HEADER
              valueFrom:
                configMapKeyRef:
                  key: REAL_IP_HEADER
                  name: config-common
            - name: REAL_IP_FROM
              valueFrom:
                configMapKeyRef:
                  key: REAL_IP_FROM
                  name: config-common
            - name: WEBMAIL
              valueFrom:
                configMapKeyRef:
                  key: WEBMAIL
                  name: config-common
            - name: WEBMAIL_ADDRESS
              value: mailu-roundcube.mailu-mailserver.svc.cluster.local
            - name: WEB_WEBMAIL
              valueFrom:
                configMapKeyRef:
                  key: WEB_WEBMAIL
                  name: config-common
            - name: WEBROOT_REDIRECT
              valueFrom:
                configMapKeyRef:
                  key: WEBROOT_REDIRECT
                  name: config-common
            - name: MESSAGE_SIZE_LIMIT
              valueFrom:
                configMapKeyRef:
                  key: MESSAGE_SIZE_LIMIT
                  name: config-common
            - name: ADMIN
              valueFrom:
                configMapKeyRef:
                  key: ADMIN
                  name: config-common
            - name: WEB_ADMIN
              valueFrom:
                configMapKeyRef:
                  key: WEB_ADMIN
                  name: config-common
            - name: WEBDAV
              valueFrom:
                configMapKeyRef:
                  key: WEBDAV
                  name: config-common
            - name: WEBDAV_ADDRESS
              value: 'mailu-webdav.mailu-mailserver.svc.cluster.local:5232'
            - name: SUBNET
              valueFrom:
                configMapKeyRef:
                  key: SUBNET
                  name: config-common
            - name: SUBNET6
              valueFrom:
                configMapKeyRef:
                  key: SUBNET6
                  name: config-common
            - name: DMARC_RUA
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUA
                  name: config-common
            - name: DMARC_RUF
              valueFrom:
                configMapKeyRef:
                  key: DMARC_RUF
                  name: config-common
            - name: WELCOME
              valueFrom:
                configMapKeyRef:
                  key: WELCOME
                  name: config-common
            - name: WELCOME_SUBJECT
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_SUBJECT
                  name: config-common
            - name: WELCOME_BODY
              valueFrom:
                configMapKeyRef:
                  key: WELCOME_BODY
                  name: config-common
            - name: COMPRESSION
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION
                  name: config-common
            - name: COMPRESSION_LEVEL
              valueFrom:
                configMapKeyRef:
                  key: COMPRESSION_LEVEL
                  name: config-common
            - name: TZ
              valueFrom:
                configMapKeyRef:
                  key: TZ
                  name: config-common
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 200Mi
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: zoneinfo
              readOnly: true
              mountPath: /usr/share/zoneinfo
            - name: zoneinfo
              readOnly: true
              mountPath: /etc/localtime
              subPath: Asia/Shanghai
          livenessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 1
          startupProbe:
            httpGet:
              path: /health
              port: http
              scheme: HTTP
            timeoutSeconds: 5
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 30
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      dnsPolicy: ClusterFirst
        #      nodeSelector:

      securityContext: { }
      schedulerName: default-scheduler

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-admin
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: admin
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: mailu
    component: admin
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-clamav
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: clamav
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: clamav
      protocol: TCP
      port: 3310
      targetPort: 3310
  selector:
    app: mailu
    component: clamav
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-dovecot
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: dovecot
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: imap-auth
      protocol: TCP
      port: 2102
      targetPort: 2102
    - name: imap-transport
      protocol: TCP
      port: 2525
      targetPort: 2525
    - name: imap-default
      protocol: TCP
      port: 143
      targetPort: 143
    - name: pop3
      protocol: TCP
      port: 110
      targetPort: 110
    - name: sieve
      protocol: TCP
      port: 4190
      targetPort: 4190
  selector:
    app: mailu
    component: dovecot
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-front
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: front
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: pop3
      protocol: TCP
      port: 110
      targetPort: 110
    - name: pop3s
      protocol: TCP
      port: 995
      targetPort: 995
    - name: imap
      protocol: TCP
      port: 143
      targetPort: 143
    - name: imaps
      protocol: TCP
      port: 993
      targetPort: 993
    - name: smtp
      protocol: TCP
      port: 25
      targetPort: 25
    - name: smtps
      protocol: TCP
      port: 465
      targetPort: 465
    - name: smtpd
      protocol: TCP
      port: 587
      targetPort: 587
    - name: smtp-auth
      protocol: TCP
      port: 10025
      targetPort: 10025
    - name: imap-auth
      protocol: TCP
      port: 10143
      targetPort: 10143
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: mailu
    component: front
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-front-ext
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: front
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: pop3s
      protocol: TCP
      port: 995
      targetPort: 995
    - name: imaps
      protocol: TCP
      port: 993
      targetPort: 993
    - name: smtp
      protocol: TCP
      port: 25
      targetPort: 25
    - name: smtps
      protocol: TCP
      port: 465
      targetPort: 465
    - name: smtpd
      protocol: TCP
      port: 587
      targetPort: 587
  selector:
    app: mailu
    component: front
  type: NodePort
  sessionAffinity: None
  externalTrafficPolicy: Local
  ipFamilies:
    - IPv4
    - IPv6
  ipFamilyPolicy: PreferDualStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-postfix
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: postfix
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: smtp
      protocol: TCP
      port: 25
      targetPort: 25
    - name: smtp-ssl
      protocol: TCP
      port: 465
      targetPort: 465
    - name: smtp-starttls
      protocol: TCP
      port: 587
      targetPort: 587
    - name: smtp-auth
      protocol: TCP
      port: 10025
      targetPort: 10025
  selector:
    app: mailu
    component: postfix
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-redis
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: redis
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: redis
      protocol: TCP
      port: 6379
      targetPort: 6379
  selector:
    app: mailu
    component: redis
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-roundcube
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: roundcube
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: mailu
    component: roundcube
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-rspamd
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: rspamd
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: rspamd
      protocol: TCP
      port: 11332
      targetPort: 11332
    - name: rspamd-http
      protocol: TCP
      port: 11334
      targetPort: 11334
  selector:
    app: mailu
    component: rspamd
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Service
apiVersion: v1
metadata:
  name: mailu-webdav
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: webdav
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
spec:
  ports:
    - name: http
      protocol: TCP
      port: 5232
      targetPort: 5232
  selector:
    app: mailu
    component: webdav
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: mailu-ingress
  namespace: mailu-mailserver
  labels:
    app: mailu
    app.kubernetes.io/managed-by: Helm
    component: admin
  annotations:
    meta.helm.sh/release-name: mailu
    meta.helm.sh/release-namespace: mailu-mailserver
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: dnspod  # dnspod方式签名证书
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - mail.pi4b.scjtqs.com
        - imap.pi4b.scjtqs.com
        - smtp.pi4b.scjtqs.com
        - pop3.pi4b.scjtqs.com
      secretName: mailu-certificates
  rules:
    - host: mail.pi4b.scjtqs.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mailu-front
                port:
                  number: 80
    - host: imap.pi4b.scjtqs.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mailu-front
                port:
                  number: 80
    - host: smtp.pi4b.scjtqs.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mailu-front
                port:
                  number: 80
    - host: pop3.pi4b.scjtqs.com
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: mailu-front
                port:
                  number: 80

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: config-common
  namespace: mailu-mailserver
data:
  ###################################
  # Common configuration variables
  ###################################
  TLS_FLAVOR: cert                   # Choose how secure connections will behave (value: letsencrypt, cert, notls, mail, mail-letsencrypt)
  AUTH_RATELIMIT_IP: 60/hour         # Authentication rate limit per IP (per /24 on ipv4 and /56 on ipv6)
  AUTH_RATELIMIT_USER: 100/day       # Authentication rate limit per user (regardless of the source-IP)
  DISABLE_STATISTICS: "False"        # Opt-out of statistics, replace with "True" to opt out
  SUBNET: 172.16.0.0/12              #填写k8s 的podSubnet，一般由 --pod-network-cidr 配置
  POSTMASTER: admin
  HOSTNAMES: mail.pi4b.scjtqs.com,imap.pi4b.scjtqs.com,smtp.pi4b.scjtqs.com,pop3.pi4b.scjtqs.com
  DOMAIN: pi4b.scjtqs.com
  SECRET_KEY: 1VMNH999AKHB3FKG
  SUBNET6: fc00::/48                  # 如果你的k8s 以及 calico.yaml 未配置和开启ipv6支持 这里还是留空吧
  ###################################
  # Optional features
  ###################################
  ADMIN: "true"                       # Expose the admin interface (value: true, false)
  WEBMAIL: roundcube                  # Choose which webmail to run if any (values: roundcube, rainloop, none)
  WEBDAV: radicale                    # Dav server implementation (value: radicale, none)
  ANTIVIRUS: clamav                   # Antivirus solution (value: clamav, none)
  ###################################
  # Mail settings
  ###################################
  MESSAGE_SIZE_LIMIT: "50000000"      # Message size limit in bytes # Default: accept messages up to 50MB # Max attachment size will be 33% smaller
  MESSAGE_RATELIMIT: 200/day          # Message rate limit (per user)
  # Networks granted relay permissions
  # Use this with care, all hosts in this networks will be able to send mail without authentication!
  RELAYNETS: ""
  RELAYHOST: ""                       # Will relay all outgoing mails if configured
  FETCHMAIL_DELAY: "600"              # Fetchmail delay
  RECIPIENT_DELIMITER: +              # Recipient delimiter, character used to delimiter localpart from custom address part
  DMARC_RUA: admin                    # DMARC rua and ruf email
  DMARC_RUF: admin                    # DMARC rua and ruf email
  WELCOME: "false"                    # Welcome email, enable and set a topic and body if you wish to send welcome emails to all users
  WELCOME_SUBJECT: Welcome to your new email account
  WELCOME_BODY: Welcome to your new email account, if you can read this, then it is configured properly!
  COMPRESSION: ""                     # Maildir Compression  choose compression-method, default: none (value: gz, bz2, lz4, zstd)
  COMPRESSION_LEVEL: ""               # change compression-level, default: 6 (value: 1-9)
  PASSWORD_SCHEME: PBKDF2
  ###################################
  # Web settings
  ###################################
  WEBROOT_REDIRECT: /                 # Path to redirect / to
  WEB_ADMIN: /admin                   # Path to the admin interface if enabled
  WEB_WEBMAIL: /                      # Path to the webmail if enabled
  SITENAME: 树莓派邮局
  WEBSITE: https://mail.pi4b.scjtqs.com
  ###################################
  # Advanced settings
  ###################################
  CREDENTIAL_ROUNDS: "12"             # Number of rounds used by the password hashing scheme
  REAL_IP_FROM: 192.168.50.0/24       #nginx反向代理  ingress ，这里填 nginx宿主内网ip网段
  REAL_IP_HEADER: X-Forwarded-For     # Header to take the real ip from
  REJECT_UNLISTED_RECIPIENT: "yes"    # choose wether mailu bounces (no) or rejects (yes) mail when recipient is unknown (value: yes, no)
  LOG_LEVEL: INFO                     # Log level threshold in start.py (value: CRITICAL, ERROR, WARNING, INFO, DEBUG, NOTSET)
  TZ: Asia/Shanghai
  ###################################
  # Database settings
  ###################################
  DB_HOST: 192.168.50.185               # mailu 的数据库服务地址
  DB_USER: mailu                        # mailu 的数据库用户
  DB_PW: mailuPassw0rd                  # mailu 的数据库密码
  DB_NAME: k8s-mailu                    # mailu 的数据库库名 需要自定预先创建
  DB_FLAVOR: mysql                      # mailu 的数据库类型，支持：mysql、postgrresql
  INITIAL_ADMIN_ACCOUNT: rpi4b          # 初始管理员账号
  INITIAL_ADMIN_DOMAIN: pi4b.scjtqs.com # 初始管理员域名 也就是邮箱'@'后面那部分
  INITIAL_ADMIN_PW: mailuPassw0rd       # 初始化管理员密码
  ROUNDCUBE_DB_FLAVOR: mysql            # web 客户端  数据库类型 sqlite、mysql、postgrresql
  ROUNDCUBE_DB_USER: roundcube          # web 客户端 数据库账号
  ROUNDCUBE_DB_PW: "mailuPassw0rd"      # web 客户端 数据库密码
  ROUNDCUBE_DB_NAME: roundcube          # web 客户端 数据库的库名，需要自行创建
  ROUNDCUBE_DB_HOST: 192.168.50.185     # web 客户端 数据库的服务器地址


## 通过cert-manager(acme) 申请对应的证书，将域名修改成你自己的
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: mailu-certificates
  namespace: mailu-mailserver
spec:
  secretName: mailu-certificates
  # re-new certificate when it expires in less than 60 days
  renewBefore: 1440h0m0s
  #commonName: pi4b.scjtqs.com
  dnsNames:
    - mail.pi4b.scjtqs.com
    - imap.pi4b.scjtqs.com
    - smtp.pi4b.scjtqs.com
    - pop3.pi4b.scjtqs.com
  issuerRef:
    kind: ClusterIssuer
    name: dnspod # 你自己配置好的 dns验证 方式的 证书渠道名。
  # group: cert-manager.io
